---
# ============================================================================
# üîß CONEX√ÉO DE SORTE - ZOOKEEPER INFRAESTRUTURA
# ============================================================================
# Data de Cria√ß√£o: 17/09/2025 √†s 04:25 BRT
# √öltima Atualiza√ß√£o: 17/09/2025 √†s 04:25 BRT
# Respons√°vel: Sistema Automatizado
# Vers√£o: 1.0.0
# ============================================================================
#
# ZOOKEEPER STANDALONE - Kafka Coordination Service
# - Docker Swarm deployment
# - Overlay encrypted network para seguran√ßa
# - Named volumes com placement constraints
# - Health checks otimizados para produ√ß√£o
# - Configura√ß√£o espec√≠fica para Kafka
# ============================================================================

services:
  # ============================================================================
  # üîß ZOOKEEPER - Kafka Coordination
  # ============================================================================
  zookeeper:
    image: confluentinc/cp-zookeeper:7.9.1
    hostname: conexao-zookeeper
    user: "1000:1000"
    init: true
    stop_grace_period: 45s
    environment:
      # üîß CONFIGURA√á√ÉO STANDALONE OTIMIZADA
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 5
      ZOOKEEPER_INIT_LIMIT: 10
      ZOOKEEPER_MAX_CLIENT_CNXNS: 60
      ZOOKEEPER_AUTOPURGE_SNAP_RETAIN_COUNT: 3
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: 24
      ZOOKEEPER_STANDALONE_ENABLED: "true"
      ZOOKEEPER_4LW_COMMANDS_WHITELIST: "*"
      # üöÄ PERFORMANCE E ESTABILIDADE
      KAFKA_HEAP_OPTS: "-Xmx512m -Xms256m"
      ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: WARN
      # üîê SECURITY CONFIGURATION
      ZOOKEEPER_AUTH_PROVIDER_X509: "org.apache.zookeeper.server.auth.X509AuthenticationProvider"
      ZOOKEEPER_QUORUM_AUTH_ENABLE_SASL: "true"
      ZOOKEEPER_QUORUM_AUTH_LEARNER_REQUIRE_SASL: "true"
      ZOOKEEPER_QUORUM_AUTH_SERVER_REQUIRE_SASL: "true"
      # Secrets via Docker Secrets
      ZOOKEEPER_JAAS_CONFIG_FILE: "/run/secrets/ZOOKEEPER_JAAS_CONFIG"
      ZOOKEEPER_ADMIN_PASSWORD_FILE: "/run/secrets/ZOOKEEPER_ADMIN_PASSWORD"
      ZOOKEEPER_DIGEST_AUTH_SUPER_USER_FILE: "/run/secrets/ZOOKEEPER_SUPER_USER"
    secrets:
      - ZOOKEEPER_JAAS_CONFIG
      - ZOOKEEPER_ADMIN_PASSWORD
      - ZOOKEEPER_SUPER_USER
    networks:
      conexao-network-swarm:
        aliases:
          - conexao-zookeeper
          - zookeeper
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    healthcheck:
      # ü©∫ HEALTH CHECK UTILIZANDO COMANDO RUOK
      test: [
        "CMD-SHELL",
        "(echo ruok | nc -w 3 localhost 2181 | grep -q imok) || (zookeeper-shell localhost:2181 ls / >/tmp/zk_check 2>&1 && grep -q zookeeper /tmp/zk_check)"
      ]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 90s
    deploy:
      # üõ°Ô∏è SINGLE INSTANCE FORTE - PREVINE M√öLTIPLAS INST√ÇNCIAS
      replicas: 1
      placement:
        constraints:
          - node.role == manager
        max_replicas_per_node: 1
      restart_policy:
        # üîß RESTART POLICY CONSERVADORA - EVITA LOOPS
        condition: on-failure
        delay: 60s
        max_attempts: 3
        window: 600s
      resources:
        limits:
          # üöÄ RESOURCES ADEQUADOS PARA ZOOKEEPER
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
      update_config:
        parallelism: 1
        delay: 30s
        failure_action: rollback
        monitor: 60s
        order: stop-first
      rollback_config:
        parallelism: 1
        delay: 30s
        failure_action: pause
        monitor: 60s

    # ==========================================================================
    # üè∑Ô∏è LABELS - ZOOKEEPER METADATA
    # ==========================================================================
    labels:
      # Metadata do servi√ßo
      - "org.opencontainers.image.title=Conex√£o de Sorte - Zookeeper"
      - "org.opencontainers.image.description=Coordena√ß√£o e consensus para Kafka"
      - "org.opencontainers.image.version=7.9.1"
      - "microservice.type=coordination"
      - "microservice.category=infrastructure"
      - "microservice.depends-on=none"
      - "microservice.required-by=kafka"

# ============================================================================
# üîê SECRETS EXTERNOS (Azure Key Vault)
# ============================================================================
secrets:
  ZOOKEEPER_JAAS_CONFIG:
    external: true
    name: ZOOKEEPER_JAAS_CONFIG
  ZOOKEEPER_ADMIN_PASSWORD:
    external: true
    name: ZOOKEEPER_ADMIN_PASSWORD
  ZOOKEEPER_SUPER_USER:
    external: true
    name: ZOOKEEPER_SUPER_USER

# ============================================================================
# üì¶ VOLUMES EXTERNOS
# ============================================================================
volumes:
  zookeeper_data:
    external: true
    name: zookeeper_data
  zookeeper_logs:
    external: true
    name: zookeeper_logs

# ============================================================================
# üåê NETWORKS EXTERNOS
# ============================================================================
networks:
  conexao-network-swarm:
    external: true
    name: conexao-network-swarm
